print(summary(oats))
source('~/Documents/subversion/public/projects/6ix/nlmeData/nlmeTutorial.R')
source('~/Documents/subversion/public/projects/6ix/nlmeData/nlmeTutorial.R')
head(oats)
help name
? name
colnames(oats)= c('block', 'variety', 'nitrogen', 'yield')
View(oats)
library(nlme)
m1.nlme = lme(yield ~ variety*nitrogen,
random = ~ 1|block/mainplot,
data = oats)
summary(m1.nlme)
oats$mainplot
oats$variety
oats$mainplot = oats$variety
oats$subplot = oats$nitrogen
oats$mainplot
print(summary(oats))
library(nlme)
m1.nlme = lme(yield ~ variety*nitrogen,
random = ~ 1|block/mainplot,
data = oats)
summary(m1.nlme)
anova(m1.nlme)
?simulate.nlme
library(AED)
require(AED)
install.package(AED)
install.packages(AED)
pwd
cd
ls
!pwd
source("/zuur/AllRCode/Chapter2.R")
source("/zuur/AllRCode/Chapter2.r")
source("~/documents/subversion/public/projects/6ix/zuur/AllRCode/Chapter2.r")
source("/Users/caitlynmccoleman/Documents/subversion/public/projects/6ix/nlmeData/zuur/AllRCodeChapter2.r")
source("/Users/caitlynmccoleman/Documents/subversion/public/projects/6ix/nlmeData/zuur/AllRCode/Chapter2.r")
setwd("~/Documents/subversion/public/projects/Starcraft/tw00")
open('ALtest.R')
pwd
setwd("~/Documents/subversion/public/projects/Starcraft/tw00")
load("ALtest.R")
Dat=read.table("~/Documents/Rdata/skilldependencemastertable_final.csv",sep=',',header=TRUE)
#necessary packages that may need isntalling
library('lme4')
library(ggplot2)
# install.packages('Rmisc')
library(Rmisc)
# # # install.packages('HLMdiag')
library(HLMdiag)
#set league to factor type variable
Dat$League=as.factor(Dat$League)
Dat$PACActionLatencyMean=(Dat$PACActionLatencyMean/88.5347)
Dat$MeanPACActionDiffMean=(Dat$MeanPACActionDiffMean/88.5347)
## data cleaning. we need to take summaries for pacactionlatencymean and pacdiffmean and put em together
tgc=summarySE(Dat, measurevar=c("PACActionLatencyMean"), groupvars=c("League"))
tgc2=summarySE(Dat, measurevar=c("MeanPACActionDiffMean"), groupvars=c("League"))
#put these summaries into a long format table
#initialize dataframe properly so it wont crash out
SuperSummary <- data.frame(1:14)
#concatonate summaries
SuperSummary$Response_Time=c(tgc$PACActionLatencyMean, tgc2$MeanPACActionDiffMean)
SuperSummary$se=c(tgc$se, tgc2$se)
# SuperSummary$League=c(tgc$League, tgc2$League)
SuperSummary$League=c(1:length(tgc$League), 1:length(tgc2$League))
SuperSummary$Variable=as.factor(c(rep('First Action Latency',length(tgc$League)),rep('Between Action Latency',length(tgc2$League))))
#plot
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=20)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.8)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
print(figHandle)
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=20)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=20)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
testRec=data.frame()
print(figHandle)
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=10)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
testRec=data.frame()
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=10)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
testRec=data.frame()
print(figHandle)
# Put bottom-right corner of legend box in bottom-right corner of graph
bp + theme(legend.justification=c(1,0), legend.position=c(1,0))
figHande + theme(legend.justification=c(1,0), legend.position=c(1,0))
figHandle + theme(legend.justification=c(1,0), legend.position=c(1,0))
figHandle + theme(legend.justification=c(1,0), legend.position=c(1,1))
figHandle + theme(legend.justification=c(1,1), legend.position=c(1,0))
figHandle + theme(legend.justification=c(0,0), legend.position=c(1,0))
figHandle + theme(legend.justification=c(1,0), legend.position=c(1,0))
figHandle + theme(legend.justification=c(1,1), legend.position=c(0,0))
figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
bp + theme(legend.justification=c(1,0), legend.position=c(1,0))
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=15)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
print(figHandle)
figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
f2=figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
print(f2)
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
bp + theme(legend.justification=c(1,0), legend.position=c(1,0))
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=18)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
f2 = figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
print(f2)
f2 = figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
f2 + theme(legend.background = element_rect())
f2 + theme(legend.background = element_rect(fill="gray90", size=.5, linetype="dotted"))
f2 + theme(legend.background = element_rect(fill="white", size=.5, linetype="dotted"))
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
bp + theme(legend.justification=c(1,0), legend.position=c(1,0))
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=20)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
f2 = figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
bp + theme(legend.justification=c(1,0), legend.position=c(1,0))
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=20)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
bp + theme(legend.justification=c(1,0), legend.position=c(1,0))
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=20)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
f2 = figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=20)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
f2 = figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
f2 + theme(legend.justification=c(1,0), legend.position=c(1,0))
f2 + theme(legend.justification=c(1,1), legend.position=c(1,0))
f2 + theme(legend.justification=c(1,0), legend.position=c(0,0))
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=20)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
f2 = figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
f2 + theme(legend.justification=c(1,0), legend.position=c(1,1))
f2 + theme(legend.justification=c(1,0), legend.position=c(0,1))
f2 + theme(legend.justification=c(1,0), legend.position=c(0,0))
f2 + theme(legend.justification=c(0,0), legend.position=c(0,0))
f2 + theme(legend.justification=c(0,0), legend.position=c(1,1))
f2 + theme(legend.justification=c(0,0), legend.position=c(1,0))
f2 + theme(legend.justification=c(0,0), legend.position=c(0,1))
f2 = figHandle + theme(legend.justification=c(0,0), legend.position=c(1,1))
f2 = figHandle + theme(legend.justification=c(0,0), legend.position=c(1,1))
#f2 + theme(legend.justification=c(0,0), legend.position=c(0,1))
testRec=data.frame()
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=20)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
f2 = figHandle + theme(legend.justification=c(0,0), legend.position=c(1,1))
#f2 + theme(legend.justification=c(0,0), legend.position=c(0,1))
testRec=data.frame()
f2 = figHandle + theme(legend.justification=c(0,0), legend.position=c(0,0))
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=20)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
#f2 = figHandle + theme(legend.justification=c(0,0), legend.position=c(0,0))
#f2 + theme(legend.justification=c(0,0), legend.position=c(0,1))
testRec=data.frame()
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=20)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
#f2 = figHandle + theme(legend.justification=c(0,0), legend.position=c(0,0))
#f2 + theme(legend.justification=c(0,0), legend.position=c(0,1))
testRec=data.frame()
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=20)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
f2 = figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
f2 + theme(legend.justification=c(1,0), legend.position=c(1,0))
f2 + theme(legend.justification=c(1,0), legend.position=c(1,1))
f2 + theme(legend.justification=c(0,0), legend.position=c(1,0))
f2 + theme(legend.justification=c(0,0), legend.position=c(0,0))
f2 + theme(legend.justification=c(0,1), legend.position=c(0,0))
f2 + theme(legend.justification=c(0,1), legend.position=c(1,1))
f2 + theme(legend.justification=c(0,1), legend.position=c(1,0))
f2 + theme(legend.justification=c(0,1), legend.position=c(0,0))
f2 + theme(legend.justification=c(0,1), legend.position=c(1,0))
f2 + theme(legend.position=c(.5, .5))
f2 + theme(legend.position=c(1, .5))
f2 + theme(legend.position=c(1, 1))
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line() +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=17)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
f2 = figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
f2 + theme(legend.position=c(1, 1))
testRec=data.frame()
for (i in 1:6)
source('~/Documents/subversion/public/projects/Starcraft/tw00/ALtest.R')
source('~/Documents/subversion/public/projects/Starcraft/tw00/ALtest.R')
f2 + geom_line(aes(group = Variable),color = "red",size = 1.2)
f2 + scale_color_manual(values=c('red','green'))
f2 + scale_color_manual(values=c('red','#008F00'))
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line(size=1.5) +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=17)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
f2 = figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
f2 + theme(legend.position=c(1, 1))
f2 + scale_color_manual(values=c('red','#008F00')) # for consistency with Figure 1
f2 + coord_fixed(ratio = 0.2)
f2 + coord_fixed(ratio = 4)
f2 + coord_fixed(ratio = 4.5)
f2 + coord_fixed(ratio = 5)
f2 + scale_color_manual(values=c('red','#008F00')) # for consistency with Figure 1
f2 + coord_fixed(ratio = 5)
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line(size=1.5) +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=12)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
f2 = figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
f2 = f2 + theme(legend.position=c(1, 1))
f2 = f2 + scale_color_manual(values=c('red','#008F00')) # for consistency with Figure 1
f2 = f2 + coord_fixed(ratio = 5)
figHandle<-ggplot(SuperSummary, aes(x=League, y=Response_Time, colour=Variable)) +
geom_errorbar(aes(ymin=Response_Time-se, ymax=Response_Time+se), width=.1) +
geom_line(size=1.5) +
geom_point() + # figHandle added during review so it can be accessed/printed # Put bottom-right corner of legend box in bottom-right corner of graph
scale_x_continuous(breaks = round(seq(min(SuperSummary$League), max(SuperSummary$League, by = 0.5)))) + # added on due date to show league
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15)) + theme(legend.title=element_blank()) +labs(y="Action Latency (secs)") + theme(legend.text = element_text(size=12)) + theme(panel.background = element_rect(fill = 'white', color='white'), strip.text.x=element_text(size=rel(.5)), axis.ticks.length=unit(0.3, "lines"), panel.grid.major=element_line(color='grey', size=.5))
f2 = figHandle + theme(legend.justification=c(1,1), legend.position=c(1,1))
f2 = f2 + theme(legend.position=c(1, 1))
f2 = f2 + scale_color_manual(values=c('red','#008F00')) # for consistency with Figure 1
f2 = f2 + coord_fixed(ratio = 5)
f2 = f2 + scale_color_manual(values=c('red','#008F00')) # for consistency with Figure 1
source('~/Documents/subversion/public/projects/Starcraft/tw00/ALtest.R')
rm 2
rm f2
clear f2
source('~/Documents/subversion/public/projects/Starcraft/tw00/ALtest.R')
library(help = "datasets")
library(datasets.JohnsonJonhnson)
library(datasets)
load(JohnsonJohnson)
load("JohnsonJohnson")
read.table("JohnsonJohnson")
library(MASS)
data("EuStockMarkets")
head(EuStockMarkets)
data("sleep")
head(sleep)
summary(sleep)
summary(sunspots)
sunDat<-data(sunspots)
summary(sunDat)
head(sunDat)
summary(data(sunspots))
plot(sunspots)
require(graphics)
plot(sunspots, main = "sunspots data", xlab = "Year",
ylab = "Monthly sunspot numbers")
head(sunspots)
sunspots
head(sunspots)
view(sunspots)
explore(sunspots)
View(sunspots)
sunspot.month
summary(sunspot.month)
testX<-sunspot.month
clear
clc
rm(list=ls())
ls()
